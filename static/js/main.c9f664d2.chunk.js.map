{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","props","onAdd","useState","query","setQuery","setMovie","isLoading","setIsLoading","isSubmitDone","setIsSubmitDone","isQueryFilled","onSubmit","event","preventDefault","fetch","then","res","ok","json","status","statusText","getMovie","Title","Plot","Poster","id","imdbID","catch","console","log","finally","htmlFor","type","placeholder","value","onChange","target","classNames","disabled","onClick","App","setMovies","includes","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c9f664d2.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","/* eslint-disable no-console */\nimport classNames from 'classnames';\nimport React, { FormEvent, useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n// import { MovieData } from '../../types/MovieData';\n\ninterface Props {\n  onAdd: (movie: Movie) => void;\n}\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const { onAdd } = props;\n\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSubmitDone, setIsSubmitDone] = useState(false);\n\n  const isQueryFilled = query !== '';\n\n  const getImdbUrl = (id: string | null) => {\n    if (id) {\n      return `https://www.imdb.com/title/${id}`;\n    }\n\n    return 'https://via.placeholder.com/360x270.png?text=no%20preview';\n  };\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n    getMovie(query)\n      .then((res) => res.Title && setMovie({\n        title: res.Title,\n        description: res.Plot,\n        imgUrl: res.Poster,\n        imdbUrl: getImdbUrl(res.imdbID),\n        imdbId: res.imdbID,\n      }))\n      .catch(() => {\n        console.log(isSubmitDone);\n      })\n      .finally(() => {\n        setIsLoading(false);\n        setIsSubmitDone(true);\n      });\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n                setIsSubmitDone(false);\n              }}\n            />\n          </div>\n\n          { isSubmitDone && !movie?.title && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                isLoading && 'is-loading',\n              )}\n              disabled={!isQueryFilled}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie?.title && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  onAdd(movie);\n                  setMovie(null);\n                  setIsSubmitDone(false);\n                }}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\n\nconst API_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=b8df89c';\n\nexport function getMovie(query: string): Promise<MovieData> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => {\n      return res.ok ? res.json() : `${res.status}: ${res.statusText}`;\n    });\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const onAdd = (movie: Movie) => {\n    if (!movies.includes(movie)) {\n      setMovies((prev) => [...prev, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAdd={onAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}